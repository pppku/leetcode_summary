/* question

15. 三数之和
给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。

注意：答案中不可以包含重复的三元组。

 

示例 1：

输入：nums = [-1,0,1,2,-1,-4]
输出：[[-1,-1,2],[-1,0,1]]
示例 2：

输入：nums = []
输出：[]
示例 3：

输入：nums = [0]
输出：[]
 

提示：

0 <= nums.length <= 3000
-105 <= nums[i] <= 105

*/


/* solution

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        int n = nums.size();
        if(n < 3) return res;
        sort(nums.begin(), nums.end());

        for(int left = 0; left < n; ++left)
        {
            if(nums[left] > 0) return res;

            if(left > 0 && nums[left] == nums[left - 1]) continue;

            int mid = left + 1;
            int right = n - 1;

            while(mid < right)
            {
                if(nums[left] + nums[mid] + nums[right] > 0) right--;
                else if(nums[left] + nums[mid] + nums[right] < 0) mid++;
                else
                {
                    res.push_back({nums[left], nums[mid], nums[right]});

                    while(mid < right && nums[mid] == nums[mid + 1]) mid++;
                    while(mid < right && nums[right] == nums[right - 1]) right--;

                    mid++;
                    right--;
                }
            }
        }
        return res;
    }
};

*/
