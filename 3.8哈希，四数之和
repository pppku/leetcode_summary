/* question

18. 四数之和
给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。

注意：答案中不可以包含重复的四元组。

 

示例 1：

输入：nums = [1,0,-1,0,-2,2], target = 0
输出：[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]
示例 2：

输入：nums = [], target = 0
输出：[]
 

提示：

0 <= nums.length <= 200
-109 <= nums[i] <= 109
-109 <= target <= 109

*/


/* solution

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        int n = nums.size();
        if(n < 4) return res;
        sort(nums.begin(), nums.end());

        for(int a = 0; a < n; ++a)
        {
            if(nums[a] > 0 && nums[a] > target) return res;
            if(a > 0 && nums[a] == nums[a - 1]) continue;
            int need = target - nums[a];

            for(int b = a + 1; b < n; ++b)
            {
                // if(nums[b] > need) return res;

                if(b > a + 1 && nums[b] == nums[b - 1]) continue;

                int c = b + 1;
                int d = n - 1;

                while(c < d)
                {
                    if(nums[b] + nums[c] + nums[d] > need) d--;
                    else if(nums[b] + nums[c] + nums[d] < need) c++;
                    else
                    {
                        res.push_back({nums[a], nums[b], nums[c], nums[d]});

                        while(c < d && nums[c] == nums[c + 1]) c++;
                        while(c < d && nums[d] == nums[d - 1]) d--;

                        c++;
                        d--;
                    }
                }
                
            }
        }

        return res;

    }
};

*/
